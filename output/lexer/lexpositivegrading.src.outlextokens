[eq, ==, 20]
[plus, +, 20]
[or, |, 20]
[openpar, (, 20]
[semi, ;, 20]
[if, if, 20]
[public, public, 20]
[read, read, 20]
[noteq, <>, 21]
[minus, -, 21]
[and, &, 21]
[closepar, ), 21]
[comma, ,, 21]
[then, then, 21]
[private, private, 21]
[write, write, 21]
[lt, <, 22]
[mult, *, 22]
[not, !, 22]
[opencubr, {, 22]
[dot, ., 22]
[else, else, 22]
[func, func, 22]
[return, return, 22]
[gt, >, 23]
[div, /, 23]
[closecubr, }, 23]
[colon, :, 23]
[integer, integer, 23]
[var, var, 23]
[self, self, 23]
[leq, <=, 24]
[assign, =, 24]
[opensqbr, [, 24]
[float, float, 24]
[struct, struct, 24]
[inherits, inherits, 24]
[geq, >=, 25]
[closesqbr, ], 25]
[arrow, ->, 25]
[void, void, 25]
[while, while, 25]
[let, let, 25]
[func, func, 26]
[impl, impl, 26]
[intnum, 0, 32]
[intnum, 1, 33]
[intnum, 10, 34]
[intnum, 12, 35]
[intnum, 123, 36]
[intnum, 12345, 37]
[floatnum, 1.23, 39]
[floatnum, 12.34, 40]
[floatnum, 120.34e10, 41]
[floatnum, 12345.6789e-123, 42]
[id, abc, 44]
[id, abc1, 45]
[id, a1bc, 46]
[id, abc_1abc, 47]
[id, abc1_abc, 48]
[inlinecmt, // this is an inline comment, 50]
[blockcmt, /* this is a single line block comment */, 51]
[blockcmt, /* this is a \nmultiple line\nblock comment \n*/, 53]
[blockcmt, /* this is an imbricated \n/* block comment\n*/\n*/, 58]
